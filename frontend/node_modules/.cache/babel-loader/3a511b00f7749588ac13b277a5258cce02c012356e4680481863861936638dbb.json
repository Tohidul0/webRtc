{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdCalling\\\\Documents\\\\Tohidul Backend Dev\\\\videocallingnest\\\\video-chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { io } from 'socket.io-client';\nimport { FaVideo, FaVideoSlash, FaMicrophone, FaMicrophoneSlash } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n`;\n_c = AppContainer;\nconst VideoContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n  padding: 20px;\n`;\n_c2 = VideoContainer;\nconst Video = styled.video`\n  width: 100%;\n  max-width: 600px;\n  border-radius: 10px;\n  background-color: #2a2a2a;\n`;\n_c3 = Video;\nconst Controls = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 5px;\n  border: none;\n  background-color: #4a4a4a;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  &:hover {\n    background-color: #5a5a5a;\n  }\n`;\n_c5 = Button;\nconst RoomInput = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 10px;\n`;\n_c6 = RoomInput;\nconst Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #2a2a2a;\n  color: white;\n`;\n_c7 = Input;\nconst ErrorMessage = styled.div`\n  color: #ff4444;\n  background-color: rgba(255, 68, 68, 0.1);\n  padding: 10px 20px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  text-align: center;\n  max-width: 600px;\n`;\n_c8 = ErrorMessage;\nconst RoomStatus = styled.div`\n  color: ${props => props.status === 'disconnected' ? '#ff4444' : props.status === 'connected' ? '#ffbb33' : '#00C851'};\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n_c9 = RoomStatus;\nfunction App() {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState({});\n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const [isAudioOn, setIsAudioOn] = useState(true);\n  const localVideoRef = useRef();\n  const socketRef = useRef();\n  const peerConnections = useRef({});\n  const [error, setError] = useState(null);\n  const [roomStatus, setRoomStatus] = useState('disconnected');\n  useEffect(() => {\n    socketRef.current = io('http://localhost:3000');\n    socketRef.current.on('connect', () => {\n      console.log('Connected to signaling server');\n      setRoomStatus('connected');\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Disconnected from signaling server');\n      setRoomStatus('disconnected');\n    });\n    socketRef.current.on('peers-list', ({\n      peers\n    }) => {\n      console.log('Peers in room:', peers);\n      peers.forEach(peerId => {\n        createPeerConnection(peerId);\n      });\n      setRoomStatus('joined');\n    });\n    socketRef.current.on('signal', async ({\n      from,\n      data\n    }) => {\n      const peerConnection = peerConnections.current[from];\n      if (!peerConnection) return;\n      try {\n        if (data.offer) {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\n          const answer = await peerConnection.createAnswer();\n          await peerConnection.setLocalDescription(answer);\n          socketRef.current.emit('signal', {\n            to: from,\n            data: {\n              answer: peerConnection.localDescription\n            }\n          });\n        } else if (data.answer) {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\n        } else if (data.candidate) {\n          await peerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      } catch (error) {\n        console.error('Error handling signal:', error);\n      }\n    });\n    socketRef.current.on('peer-disconnected', ({\n      peerId\n    }) => {\n      if (peerConnections.current[peerId]) {\n        peerConnections.current[peerId].close();\n        delete peerConnections.current[peerId];\n        setRemoteStreams(prev => {\n          const newStreams = {\n            ...prev\n          };\n          delete newStreams[peerId];\n          return newStreams;\n        });\n      }\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n  const createPeerConnection = async peerId => {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n\n    // Add local tracks to the connection\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n      });\n    }\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socketRef.current.emit('signal', {\n          to: peerId,\n          data: {\n            candidate: event.candidate\n          }\n        });\n      }\n    };\n\n    // Handle incoming tracks\n    peerConnection.ontrack = event => {\n      console.log('Received track from peer:', peerId);\n      setRemoteStreams(prev => ({\n        ...prev,\n        [peerId]: event.streams[0]\n      }));\n    };\n\n    // Create and send offer if we're the initiator\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socketRef.current.emit('signal', {\n        to: peerId,\n        data: {\n          offer: peerConnection.localDescription\n        }\n      });\n    } catch (error) {\n      console.error('Error creating offer:', error);\n    }\n\n    // Handle incoming signals\n    peerConnection.onsignalingstatechange = () => {\n      console.log('Signaling state:', peerConnection.signalingState);\n    };\n    peerConnection.oniceconnectionstatechange = () => {\n      console.log('ICE connection state:', peerConnection.iceConnectionState);\n    };\n    peerConnections.current[peerId] = peerConnection;\n  };\n  const startLocalStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          },\n          facingMode: \"user\"\n        },\n        audio: true\n      });\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      setError(null);\n    } catch (error) {\n      console.error('Error accessing media devices:', error);\n      setError('Could not access camera or microphone. Please make sure you have granted the necessary permissions and that your camera/microphone is not being used by another application.');\n    }\n  };\n  const joinRoom = () => {\n    if (roomId) {\n      socketRef.current.emit('join-room', roomId);\n      startLocalStream();\n    } else {\n      setError('Please enter a room ID');\n    }\n  };\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      videoTrack.enabled = !videoTrack.enabled;\n      setIsVideoOn(!isVideoOn);\n    }\n  };\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      audioTrack.enabled = !audioTrack.enabled;\n      setIsAudioOn(!isAudioOn);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RoomStatus, {\n      status: roomStatus,\n      children: [\"Status: \", roomStatus === 'disconnected' ? 'Not Connected' : roomStatus === 'connected' ? 'Connected to Server' : 'Joined Room']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomInput, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Enter Room ID\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: joinRoom,\n        disabled: roomStatus === 'joined',\n        children: roomStatus === 'joined' ? 'In Room' : 'Join Room'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), Object.entries(remoteStreams).map(([peerId, stream]) => /*#__PURE__*/_jsxDEV(Video, {\n        autoPlay: true,\n        playsInline: true,\n        ref: video => {\n          if (video) video.srcObject = stream;\n        }\n      }, peerId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleVideo,\n        children: [isVideoOn ? /*#__PURE__*/_jsxDEV(FaVideo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaVideoSlash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 38\n        }, this), isVideoOn ? 'Turn Off Video' : 'Turn On Video']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleAudio,\n        children: [isAudioOn ? /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaMicrophoneSlash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 43\n        }, this), isAudioOn ? 'Mute' : 'Unmute']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gapYLK+/HSmu+ZSZ0+SmHsRc5zk=\");\n_c10 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"RoomInput\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"RoomStatus\");\n$RefreshReg$(_c10, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","io","FaVideo","FaVideoSlash","FaMicrophone","FaMicrophoneSlash","jsxDEV","_jsxDEV","AppContainer","div","_c","VideoContainer","_c2","Video","video","_c3","Controls","_c4","Button","button","_c5","RoomInput","_c6","Input","input","_c7","ErrorMessage","_c8","RoomStatus","props","status","_c9","App","_s","roomId","setRoomId","localStream","setLocalStream","remoteStreams","setRemoteStreams","isVideoOn","setIsVideoOn","isAudioOn","setIsAudioOn","localVideoRef","socketRef","peerConnections","error","setError","roomStatus","setRoomStatus","current","on","console","log","peers","forEach","peerId","createPeerConnection","from","data","peerConnection","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","emit","to","localDescription","candidate","addIceCandidate","RTCIceCandidate","close","prev","newStreams","disconnect","RTCPeerConnection","iceServers","urls","getTracks","track","addTrack","onicecandidate","event","ontrack","streams","createOffer","onsignalingstatechange","signalingState","oniceconnectionstatechange","iceConnectionState","startLocalStream","stream","navigator","mediaDevices","getUserMedia","width","ideal","height","facingMode","audio","srcObject","joinRoom","toggleVideo","videoTrack","getVideoTracks","enabled","toggleAudio","audioTrack","getAudioTracks","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","ref","autoPlay","playsInline","muted","Object","entries","map","_c10","$RefreshReg$"],"sources":["C:/Users/bdCalling/Documents/Tohidul Backend Dev/videocallingnest/video-chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { io } from 'socket.io-client';\r\nimport { FaVideo, FaVideoSlash, FaMicrophone, FaMicrophoneSlash } from 'react-icons/fa';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background-color: #1a1a1a;\r\n  color: white;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Video = styled.video`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  border-radius: 10px;\r\n  background-color: #2a2a2a;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #4a4a4a;\r\n  color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  &:hover {\r\n    background-color: #5a5a5a;\r\n  }\r\n`;\r\n\r\nconst RoomInput = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #2a2a2a;\r\n  color: white;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #ff4444;\r\n  background-color: rgba(255, 68, 68, 0.1);\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst RoomStatus = styled.div`\r\n  color: ${props => \r\n    props.status === 'disconnected' ? '#ff4444' : \r\n    props.status === 'connected' ? '#ffbb33' : \r\n    '#00C851'};\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction App() {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState({});\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n  const [isAudioOn, setIsAudioOn] = useState(true);\r\n  const localVideoRef = useRef();\r\n  const socketRef = useRef();\r\n  const peerConnections = useRef({});\r\n  const [error, setError] = useState(null);\r\n  const [roomStatus, setRoomStatus] = useState('disconnected');\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:3000');\r\n\r\n    socketRef.current.on('connect', () => {\r\n      console.log('Connected to signaling server');\r\n      setRoomStatus('connected');\r\n    });\r\n\r\n    socketRef.current.on('disconnect', () => {\r\n      console.log('Disconnected from signaling server');\r\n      setRoomStatus('disconnected');\r\n    });\r\n\r\n    socketRef.current.on('peers-list', ({ peers }) => {\r\n      console.log('Peers in room:', peers);\r\n      peers.forEach(peerId => {\r\n        createPeerConnection(peerId);\r\n      });\r\n      setRoomStatus('joined');\r\n    });\r\n\r\n    socketRef.current.on('signal', async ({ from, data }) => {\r\n      const peerConnection = peerConnections.current[from];\r\n      if (!peerConnection) return;\r\n\r\n      try {\r\n        if (data.offer) {\r\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n          const answer = await peerConnection.createAnswer();\r\n          await peerConnection.setLocalDescription(answer);\r\n          socketRef.current.emit('signal', {\r\n            to: from,\r\n            data: { answer: peerConnection.localDescription }\r\n          });\r\n        } else if (data.answer) {\r\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n        } else if (data.candidate) {\r\n          await peerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error handling signal:', error);\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('peer-disconnected', ({ peerId }) => {\r\n      if (peerConnections.current[peerId]) {\r\n        peerConnections.current[peerId].close();\r\n        delete peerConnections.current[peerId];\r\n        setRemoteStreams(prev => {\r\n          const newStreams = { ...prev };\r\n          delete newStreams[peerId];\r\n          return newStreams;\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const createPeerConnection = async (peerId) => {\r\n    const peerConnection = new RTCPeerConnection({\r\n      iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' }\r\n      ]\r\n    });\r\n\r\n    // Add local tracks to the connection\r\n    if (localStream) {\r\n      localStream.getTracks().forEach(track => {\r\n        peerConnection.addTrack(track, localStream);\r\n      });\r\n    }\r\n\r\n    // Handle ICE candidates\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socketRef.current.emit('signal', {\r\n          to: peerId,\r\n          data: { candidate: event.candidate }\r\n        });\r\n      }\r\n    };\r\n\r\n    // Handle incoming tracks\r\n    peerConnection.ontrack = (event) => {\r\n      console.log('Received track from peer:', peerId);\r\n      setRemoteStreams(prev => ({\r\n        ...prev,\r\n        [peerId]: event.streams[0]\r\n      }));\r\n    };\r\n\r\n    // Create and send offer if we're the initiator\r\n    try {\r\n      const offer = await peerConnection.createOffer();\r\n      await peerConnection.setLocalDescription(offer);\r\n      \r\n      socketRef.current.emit('signal', {\r\n        to: peerId,\r\n        data: { offer: peerConnection.localDescription }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating offer:', error);\r\n    }\r\n\r\n    // Handle incoming signals\r\n    peerConnection.onsignalingstatechange = () => {\r\n      console.log('Signaling state:', peerConnection.signalingState);\r\n    };\r\n\r\n    peerConnection.oniceconnectionstatechange = () => {\r\n      console.log('ICE connection state:', peerConnection.iceConnectionState);\r\n    };\r\n\r\n    peerConnections.current[peerId] = peerConnection;\r\n  };\r\n\r\n  const startLocalStream = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          width: { ideal: 1280 },\r\n          height: { ideal: 720 },\r\n          facingMode: \"user\"\r\n        },\r\n        audio: true\r\n      });\r\n      setLocalStream(stream);\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = stream;\r\n      }\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error accessing media devices:', error);\r\n      setError('Could not access camera or microphone. Please make sure you have granted the necessary permissions and that your camera/microphone is not being used by another application.');\r\n    }\r\n  };\r\n\r\n  const joinRoom = () => {\r\n    if (roomId) {\r\n      socketRef.current.emit('join-room', roomId);\r\n      startLocalStream();\r\n    } else {\r\n      setError('Please enter a room ID');\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (localStream) {\r\n      const videoTrack = localStream.getVideoTracks()[0];\r\n      videoTrack.enabled = !videoTrack.enabled;\r\n      setIsVideoOn(!isVideoOn);\r\n    }\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (localStream) {\r\n      const audioTrack = localStream.getAudioTracks()[0];\r\n      audioTrack.enabled = !audioTrack.enabled;\r\n      setIsAudioOn(!isAudioOn);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      {error && (\r\n        <ErrorMessage>\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n      <RoomStatus status={roomStatus}>\r\n        Status: {roomStatus === 'disconnected' ? 'Not Connected' : \r\n                roomStatus === 'connected' ? 'Connected to Server' : \r\n                'Joined Room'}\r\n      </RoomStatus>\r\n      <RoomInput>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Room ID\"\r\n          value={roomId}\r\n          onChange={(e) => setRoomId(e.target.value)}\r\n        />\r\n        <Button onClick={joinRoom} disabled={roomStatus === 'joined'}>\r\n          {roomStatus === 'joined' ? 'In Room' : 'Join Room'}\r\n        </Button>\r\n      </RoomInput>\r\n\r\n      <VideoContainer>\r\n        <Video\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n        />\r\n        {Object.entries(remoteStreams).map(([peerId, stream]) => (\r\n          <Video\r\n            key={peerId}\r\n            autoPlay\r\n            playsInline\r\n            ref={video => {\r\n              if (video) video.srcObject = stream;\r\n            }}\r\n          />\r\n        ))}\r\n      </VideoContainer>\r\n\r\n      <Controls>\r\n        <Button onClick={toggleVideo}>\r\n          {isVideoOn ? <FaVideo /> : <FaVideoSlash />}\r\n          {isVideoOn ? 'Turn Off Video' : 'Turn On Video'}\r\n        </Button>\r\n        <Button onClick={toggleAudio}>\r\n          {isAudioOn ? <FaMicrophone /> : <FaMicrophoneSlash />}\r\n          {isAudioOn ? 'Mute' : 'Unmute'}\r\n        </Button>\r\n      </Controls>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}